$browser-context: 16; // Default
@function em($pixels, $context: $browser-context) {
    @return #{$pixels/$context}em
}

@mixin bdesktop {
    @media (min-width: #{$big-desktop-width}) {
        @content;
    }
}

// MQS
@mixin mq ($consulta) {
    $media-xxs: "(min-width : 320px)";
    $media-xs: "(min-width : 480px)";
    $media-sm: "(min-width: 768px)";
    $media-md: "(min-width: 992px)";
    $media-lg: "(min-width: 1200px)";
    $media-hd: "(min-width: 1800px)";
    @if $consulta==xxs {
        @media #{$media-xxs} {
            @content;
        }
    }
    @if $consulta==xs {
        @media #{$media-xs} {
            @content;
        }
    }
    @else if $consulta==sm {
        @media #{$media-sm} {
            @content;
        }
    }
    @else if $consulta==md {
        @media #{$media-md} {
            @content;
        }
    }
    @else if $consulta==lg {
        @media #{$media-lg} {
            @content;
        }
    }
    @else if $consulta==hd {
        @media #{$media-hd} {
            @content;
        }
    }
}

@mixin bgcover {
    background-size: cover;
    background-position: center center;
    background-repeat: no-repeat;
}

@mixin coverAbsolute ($z) {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: $z;
}

@mixin coverFixed ($z) {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: $z;
}

@mixin bgparallax {
    background-attachment: fixed;
    background-size: cover;
    background-position: unset;
}

@mixin iconBg($path, $size:100%) {
    background-image: url($path);
    background-size: $size;
    background-repeat: no-repeat;
    background-position: center center;
    text-indent: -999999px;
    overflow: hidden;
}

// Clearfix mixin
%clearfix {
    *zoom: 1;
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// Define default font size
@function rem($size) {
    $remSize: $size / 16px;
    @return $remSize * 1.6rem;
}

@mixin font($size) {
    font-size: $size;
    font-size: rem($size);
}

// Gradients
@mixin background-gradient($start-color, $end-color, $orientation) {
    background: $start-color;
    @if $orientation=='vertical' {
        background: -webkit-linear-gradient(top, $start-color, $end-color);
        background: linear-gradient(to bottom, $start-color, $end-color);
    }
    @else if $orientation=='horizontal' {
        background: -webkit-linear-gradient(left, $start-color, $end-color);
        background: linear-gradient(to right, $start-color, $end-color);
    }
    @else {
        background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
        background: radial-gradient(ellipse at center, $start-color, $end-color);
    }
}

// Arrows
@mixin arrow($direction, $color, $size) {
    display: block;
    height: 0;
    width: 0;
    @if $direction=='top' {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
    }
    @else if $direction=='right' {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
    }
    @else if $direction=='bottom' {
        border-top: $size solid $color;
        border-right: $size solid transparent;
        border-left: $size solid transparent;
    }
    @else if $direction=='left' {
        border-top: $size solid transparent;
        border-right: $size solid $color;
        border-bottom: $size solid transparent;
    }
    @else if $direction=='top-left' {
        border-top: $size solid $color;
        border-right: $size solid transparent;
    }
    @else if $direction=='top-right' {
        border-top: $size solid $color;
        border-left: $size solid transparent;
    }
    @else if $direction=='bottom-left' {
        border-bottom: $size solid $color;
        border-right: $size solid transparent;
    }
    @else if $direction=='bottom-right' {
        border-bottom: $size solid $color;
        border-left: $size solid transparent;
    }
}

// Pseudo
@mixin pseudo($display: block, $pos: absolute, $content: '') {
    content: $content;
    display: $display;
    position: $pos;
}

// Define vertical, horizontal, or both position
@mixin center($position) {
    position: absolute;
    @if $position=='vertical' {
        top: 50%;
        -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        transform: translateY(-50%);
    }
    @else if $position=='horizontal' {
        left: 50%;
        -webkit-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
        transform: translate(-50%);
    }
    @else if $position=='both' {
        top: 50%;
        left: 50%;
        -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
    }
}

// Placeholders
@mixin placeholder {
     ::-webkit-input-placeholder {
        @content
    }
     :-moz-placeholder {
        @content
    }
     ::-moz-placeholder {
        @content
    }
     :-ms-input-placeholder {
        @content
    }
}

// Layout wrapper
@mixin wrapper {
    max-width: 1242px;
    margin: 0 auto;
}

@mixin button($color:white, $bgcolor:$yellow, $size:rem(16px)) {
    border: none;
    display: inline-block;
    color: $color;
    background-color: $bgcolor;
    font-family: $rg;
    font-size: $size;
    padding: $size / 2;
    transition: all 0.54s;
    text-align: center;
    &:hover {
        background-color: $color;
        color: $bgcolor;
    }
}
